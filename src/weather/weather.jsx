import React, { useEffect, useRef, useState } from 'react'
import './stylesWeather.css'
import GetWeatherIcon from './getWeatherIcon'
import cloudy from './images/cloudy.svg'
import partlyCloudy from './images/partly-cloudy.svg'
import rainy from './images/rainy.svg'
import snowy from './images/snowy.svg'
import stormy from './images/stormy.svg'
import sunny from './images/sunny.svg'

export default function Day8() {
    const [currWeatherData, SetcurrWeatherData] = useState()

    let listItems
    useEffect(() => {
        fetch(`https://api.weatherbit.io/v2.0/forecast/daily?city=Donetsk,UA&key=fe69edb28159406abc6d671552c05edb&days=7`)
            .then(function (response) {
                return response.json();
            })
            .then(function (response) {
                SetcurrWeatherData(response.data)
            })
    }, [])

    const daysOfWeekMap = {
        0: 'SUN',
        1: 'MON',
        2: 'TUES',
        3: 'WED',
        4: 'THUR',
        5: 'FRI',
        6: 'SAT'
    }

    if (currWeatherData) {
        listItems = currWeatherData.map((item) =>
            <div key={item.datetime} className="day">
                <div className="day-of-week">{daysOfWeekMap[new Date(item.datetime).getDay()]}</div>
                <div className="date">{item.datetime.split('-')[2]}</div>

                <div className={getColor(item.weather.code) + ' bar'}>
                    <div className="weather">
                        <img src={getImg(item.weather.code)} alt="weather" />
                    </div>
                    <div className="temperature">
                        {Math.round(item.temp)}<span className="degrees">&deg;</span>
                    </div>
                    <div className="content">
                        <div className="precipitation">
                            <svg role="img" className="icon">
                                <use href="#precipitation"></use>
                            </svg>
                            {item.rh + '%'}
                        </div>
                        <div className="precipitation">
                            <svg role="img" className="icon">
                                <use href="#wind"></use>
                            </svg>
                            {Math.round(item.wind_spd)}mph
                        </div>
                        <div className="low">
                            <svg role="img" className="icon">
                                <use href="#low"></use>
                            </svg>
                            {item.min_temp}&deg;
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    return <div className="weatherW">
        <h1 className='explanation'>Wether in Donetsk for a week</h1>
        <div className="wrapper">
            {listItems == undefined ? null : listItems}
        </div>
        <svg id="icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
            <symbol id="precipitation">
                <path
                    d="M30.5363 15.355C28.9868 9.16 23.7398 4.705 17.4998 4.0825V1H14.4998V4.0825C8.25982 4.705 3.01282 9.16 1.46332 15.355C1.32382 15.913 1.51582 16.504 1.95982 16.8715C2.40382 17.239 3.01732 17.3215 3.54232 17.0845C7.07332 15.475 11.1953 15.73 14.4953 17.635V27.25C14.4953 29.3185 16.1783 31 18.2453 31C20.3123 31 21.9953 29.3185 21.9953 27.25V26.5H18.9953V27.25C18.9953 27.664 18.6593 28 18.2453 28C17.8313 28 17.4953 27.664 17.4953 27.25V17.6425C20.7968 15.7315 24.9263 15.472 28.4603 17.0845C28.9838 17.323 29.5988 17.2405 30.0428 16.8715C30.4868 16.5025 30.6758 15.913 30.5363 15.355ZM15.9998 15.01C13.7243 13.693 11.1518 13 8.49982 13C7.46482 13 6.44182 13.1065 5.43982 13.318C7.49032 9.4915 11.5013 7 15.9998 7C20.4983 7 24.5093 9.4915 26.5598 13.318C22.9943 12.5665 19.1633 13.1785 15.9998 15.01Z" />
            </symbol>
            <symbol id="wind">
                <path
                    d="M 14 30.667969 C 14 30.042969 14.214844 29.515625 14.648438 29.082031 C 15.082031 28.648438 15.609375 28.433594 16.234375 28.433594 L 16.234375 21.132812 C 15.921875 21.042969 15.628906 20.925781 15.351562 20.78125 C 15.074219 20.636719 14.824219 20.457031 14.601562 20.234375 L 11.667969 22.066406 C 11.355469 22.265625 11.015625 22.390625 10.648438 22.433594 C 10.28125 22.476562 9.910156 22.445312 9.535156 22.332031 L 3.535156 20.632812 C 2.890625 20.457031 2.359375 20.09375 1.949219 19.550781 C 1.539062 19.007812 1.332031 18.390625 1.332031 17.699219 C 1.332031 16.855469 1.628906 16.140625 2.21875 15.550781 C 2.804688 14.960938 3.523438 14.667969 4.367188 14.667969 L 14.398438 14.667969 C 14.621094 14.421875 14.867188 14.210938 15.132812 14.035156 C 15.398438 13.855469 15.6875 13.710938 16 13.601562 L 16 9.035156 C 16 8.65625 16.074219 8.300781 16.21875 7.964844 C 16.363281 7.632812 16.566406 7.34375 16.832031 7.101562 L 21.398438 2.832031 C 21.910156 2.34375 22.503906 2.0625 23.183594 1.984375 C 23.859375 1.90625 24.488281 2.054688 25.066406 2.433594 C 25.777344 2.878906 26.238281 3.503906 26.449219 4.316406 C 26.660156 5.128906 26.542969 5.890625 26.101562 6.601562 L 20.765625 15.332031 C 20.945312 15.621094 21.074219 15.921875 21.152344 16.234375 C 21.226562 16.542969 21.277344 16.867188 21.300781 17.199219 L 24.898438 18.066406 C 25.277344 18.15625 25.605469 18.3125 25.882812 18.535156 C 26.160156 18.753906 26.390625 19.023438 26.566406 19.332031 L 29.601562 24.800781 C 29.933594 25.398438 30.054688 26.035156 29.964844 26.699219 C 29.878906 27.367188 29.589844 27.945312 29.101562 28.433594 C 28.5 29.035156 27.785156 29.332031 26.949219 29.332031 C 26.117188 29.332031 25.398438 29.035156 24.800781 28.433594 L 18.433594 22.066406 L 18.433594 28.433594 C 19.054688 28.433594 19.582031 28.65625 20.015625 29.101562 C 20.449219 29.542969 20.667969 30.066406 20.667969 30.667969 Z M 5.332031 6.433594 L 5.332031 4.234375 L 13.332031 4.234375 L 13.332031 6.433594 Z M 18.234375 8.832031 L 18.234375 13.5 C 18.390625 13.523438 18.550781 13.566406 18.71875 13.632812 C 18.882812 13.699219 19.03125 13.765625 19.167969 13.832031 L 24.199219 5.433594 C 24.332031 5.234375 24.367188 5.023438 24.300781 4.800781 C 24.234375 4.578125 24.101562 4.410156 23.898438 4.300781 C 23.746094 4.210938 23.570312 4.183594 23.382812 4.21875 C 23.195312 4.25 23.042969 4.320312 22.933594 4.433594 Z M 1.332031 11.765625 L 1.332031 9.566406 L 8 9.566406 L 8 11.765625 Z M 17.332031 19.101562 C 17.84375 19.101562 18.265625 18.933594 18.601562 18.601562 C 18.933594 18.265625 19.101562 17.84375 19.101562 17.332031 C 19.101562 16.820312 18.933594 16.398438 18.601562 16.066406 C 18.265625 15.734375 17.84375 15.566406 17.332031 15.566406 C 16.820312 15.566406 16.398438 15.734375 16.066406 16.066406 C 15.734375 16.398438 15.566406 16.820312 15.566406 17.332031 C 15.566406 17.84375 15.734375 18.265625 16.066406 18.601562 C 16.398438 18.933594 16.820312 19.101562 17.332031 19.101562 Z M 10.367188 20.300781 L 13.5 18.367188 C 13.433594 18.121094 13.394531 17.878906 13.382812 17.632812 C 13.371094 17.390625 13.378906 17.144531 13.398438 16.898438 L 4.367188 16.898438 C 4.144531 16.898438 3.957031 16.976562 3.800781 17.132812 C 3.644531 17.289062 3.566406 17.476562 3.566406 17.699219 C 3.566406 17.898438 3.617188 18.066406 3.71875 18.199219 C 3.816406 18.332031 3.957031 18.433594 4.132812 18.5 Z M 24.566406 20.234375 L 20.734375 19.367188 C 20.621094 19.566406 20.496094 19.753906 20.351562 19.933594 C 20.207031 20.109375 20.042969 20.265625 19.867188 20.398438 L 26.398438 26.867188 C 26.554688 27.023438 26.746094 27.101562 26.964844 27.101562 C 27.1875 27.101562 27.378906 27.023438 27.535156 26.867188 C 27.6875 26.734375 27.777344 26.578125 27.800781 26.398438 C 27.824219 26.222656 27.789062 26.054688 27.699219 25.898438 Z M 4 27.765625 L 4 25.566406 L 10.667969 25.566406 L 10.667969 27.765625 Z M 17.332031 17.332031 Z M 19.167969 13.832031 Z M 19.867188 20.398438 Z M 13.398438 16.898438 Z M 13.398438 16.898438 " />            </symbol>
            <symbol id="low">
                <path
                    d="M19.8917 6.91939C19.8917 4.77378 18.1456 3.02771 16 3.02771C13.8544 3.02771 12.1083 4.77378 12.1083 6.91939V18.7916C10.8785 19.8943 10.1625 21.4704 10.1625 23.1347C10.1625 26.3545 12.7816 28.9723 16 28.9723C19.2184 28.9723 21.8375 26.3545 21.8375 23.1347C21.8375 21.4717 21.1215 19.893 19.8917 18.7916V6.91939ZM16 26.3778C14.2124 26.3778 12.7569 24.9236 12.7569 23.1347C12.7569 22.0814 13.2771 21.089 14.1489 20.478L14.7028 20.0902V6.91939C14.7028 6.20462 15.2852 5.62217 16 5.62217C16.7148 5.62217 17.2972 6.20462 17.2972 6.91939V20.0915L17.8511 20.4793C18.7229 21.0877 19.2431 22.0814 19.2431 23.1347C19.2431 24.9236 17.7876 26.3778 16 26.3778Z" />
                <circle cx="16" cy="23.176" r="1.75506" />
            </symbol>
        </svg>
    </div>

}

function getColor(id) {
    switch (id) {
        case 611:
        case 612:
        case 700:
        case 711:
        case 721:
        case 731:
        case 741:
        case 751:
            return "cloudy"
        case 800:
        case 801:
        case 802:
            return "sunny"
        case 200:
        case 201:
        case 202:
        case 230:
        case 231:
        case 232:
        case 233:
            return "stormy"
        case 610:
        case 621:
        case 622:
        case 623:
            return "snowy"
        case 300:
        case 301:
        case 803:
        case 804:
        case 900:
            return "partly-cloudy"
        case 302:
        case 500:
        case 501:
        case 502:
        case 511:
        case 520:
        case 521:
        case 522:
            return "rainy"
        default:
            return 'cloudy'
    }
}

function getImg(id) {
    switch (id) {
        case 611:
        case 612:
        case 700:
        case 711:
        case 721:
        case 731:
        case 741:
        case 751:
            return cloudy
        case 800:
        case 801:
        case 802:
            return sunny
        case 200:
        case 201:
        case 202:
        case 230:
        case 231:
        case 232:
        case 233:
            return stormy
        case 610:
        case 621:
        case 622:
        case 623:
            return snowy
        case 300:
        case 301:
        case 803:
        case 804:
        case 900:
            return partlyCloudy
        case 302:
        case 500:
        case 501:
        case 502:
        case 511:
        case 520:
        case 521:
        case 522:
            return rainy
        default:
            return cloudy
    }
}